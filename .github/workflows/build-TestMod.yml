name: Build Mod

env:
  MOD_PROJECT_FOLDER: TestMod
  MOD_PROJECT_FILE: TestMod # no file extension is intentional

on:
  workflow_dispatch:
    inputs:
      do_create_tag:
        description: "Create a tag in the repo"
        type: boolean
        required: false
        default: true
      
      do_upload_nexus:
        description: "Upload to nexus"
        type: boolean
        required: false
        default: true
      
      upload_file_description:
        description: "Description for uploaded file - required when doing uploading"
        type: string
        required: false
        default: ""

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      zip_name: ${{env.MOD_PROJECT_FILE}} ${{env.ModVersion}}.zip

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 6.0.x
    - name: Install strip json comments
      run: |
        npm install --global strip-json-comments-cli
    - name: Setup game and SMAPI
      uses: actions/checkout@v4
      with:
        repository: StardewModders/mod-reference-assemblies
        fetch-tags: true
        ref: refs/tags/SDV1.6.3-SMAPI4.0.2
        path: GamePath
    - name: Set game path
      run: |
        echo "GamePath=$GITHUB_WORKSPACE/GamePath" >> "$GITHUB_ENV"
        echo "<Project><PropertyGroup><GamePath>$GITHUB_WORKSPACE/GamePath</GamePath></PropertyGroup></Project>" > "$HOME/stardewvalley.targets"
    - name: Restore dependencies
      run: dotnet restore $MOD_PROJECT_FILE/$MOD_PROJECT_FOLDER.csproj
    - name: Build
      run: dotnet build --no-restore --configuration Release $MOD_PROJECT_FILE/$MOD_PROJECT_FOLDER.csproj
    - name: Get mod info
      run: |
        echo "ModVersion=$(cat $MOD_PROJECT_FOLDER/manifest.json | strip-json-comments | jq --raw-output '.Version')" >> $GITHUB_ENV
    - name: Upload Artifact
      id: upload_artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{env.MOD_PROJECT_FILE}}
        path: ${{env.MOD_PROJECT_FOLDER}}/bin/Release/${{env.MOD_PROJECT_FILE}} ${{env.ModVersion}}.zip

  create_tag:
    runs-on: ubuntu-latest
    needs: build
    if: inputs.do_create_tag == true
    steps:
    - name: Install strip json comments
      run: |
        npm install --global strip-json-comments-cli
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{env.MOD_PROJECT_FILE}}
    - name: Get mod info
      run: |
        unzip "${{needs.build.outputs.zip_name}}" -d mod
        chmod +r mod/$MOD_PROJECT_FOLDER/manifest.json
        echo "ModVersion=$(cat mod/$MOD_PROJECT_FOLDER/manifest.json | strip-json-comments | jq --raw-output '.Version')" >> $GITHUB_ENV
        echo "ModSemiUniqueId=$(cat mod/$MOD_PROJECT_FOLDER/manifest.json | strip-json-comments | jq --raw-output '.UniqueID[.index(".") + 1]')" >> $GITHUB_ENV
    - name: Create tag
      uses: actions/github-script@v5
      with:
        script: |
          github.rest.git.createRef({
            owner: context.repo.owner,
            repo: conmtext.repo.repo,
            ref: 'refs/tags/' + process.env.ModSemiUniqueId + "-" + process.env.ModVersion,
            sha: context.sha
          });

  upload_nexus:
    runs-on: ubuntu-latest
    needs: build
    if: inputs.do_upload_nexus == true
    steps:
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 6.0.x
    - name: Install strip json comments
      run: |
        npm install --global strip-json-comments-cli
    - name: Install uploader
      run: |
        dotnet tool install -g Digitalroot.ModUploader
    - name: Check keys
      env:
        NEXUSMOD_API_KEY: ${{ secrets.NEXUSMOD_API_KEY }}
        NEXUSMOD_SESSION_COOKIE: ${{ secrets.NEXUSMOD_SESSION_COOKIE }}
      run: |
        drmu nx check
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{env.MOD_PROJECT_FILE}}
    - name: Get mod info
      run: |
        unzip "${{needs.build.outputs.zip_name}}" -d mod
        chmod +r mod/$MOD_PROJECT_FOLDER/manifest.json
        echo "ModName=$(cat mod/$MOD_PROJECT_FOLDER/manifest.json | strip-json-comments | jq --raw-output '.Name')" >> $GITHUB_ENV
        echo "ModVersion=$(cat mod/$MOD_PROJECT_FOLDER/manifest.json | strip-json-comments | jq --raw-output '.Version')" >> $GITHUB_ENV
        echo "ModNexusId=$(cat mod/$MOD_PROJECT_FOLDER/manifest.json | strip-json-comments | jq --raw-output '.UpdateKeys[] | select(startswith("Nexus:"))' | grep -o '[0-9]*')" >> $GITHUB_ENV
    - name: Upload mod
      env:
        NEXUSMOD_API_KEY: ${{ secrets.NEXUSMOD_API_KEY }}
        NEXUSMOD_SESSION_COOKIE: ${{ secrets.NEXUSMOD_SESSION_COOKIE }}
      run: |
        drmu nexusmods upload $ModNexusId "${{needs.build.outputs.zip_name}}" -f "$ModName $ModVersion" -v $ModVersion -t Main -d "${{ inputs.upload_file_description }}" -g stardewvalley -dfa
        
